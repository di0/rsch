<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.develdio.remotesearch</groupId>
  <artifactId>rsch</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>rsch</name>
  <url>http://maven.apache.org</url>
	<description>
		The app rsch(remote searcher) provides a form of to search by a pattern remotely using
		the grep command utility. This app can else download the file which
		the pattern was encountered via scp command utility.
	</description>
	<developers>
		<developer>
			<id>di0</id>
			<name>Diogo Pinto</name>
			<email>dio@lognull.com</email>
			<roles>
				<role>Original Author</role>
			</roles>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<properties>
		<app.main.class>com.develdio.remotesearch.Main</app.main.class>
		<java.home.bin>${java.home}/../</java.home.bin>
		<javapackager>${java.home.bin}/bin/javapackager</javapackager>
		<buildDirectory>${project.basedir}/target</buildDirectory>
		<name-with-dependencies>${project.artifactId}-app</name-with-dependencies>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.lognull.libnetwork</groupId>
			<artifactId>libnetworkprotocol</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.8</version>
		</dependency>
		<dependency>
			<groupId>gnu.getopt</groupId>
			<artifactId>java-getopt</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>org.fusesource.jansi</groupId>
			<artifactId>jansi</artifactId>
			<version>1.15</version>
		</dependency>
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.0</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>rsch</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<compilerVersion>1.7</compilerVersion>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.4.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${app.main.class}</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<finalName>${name-with-dependencies}</finalName>
					 <appendAssemblyId>false</appendAssemblyId>
					 <attach>false</attach>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>SOBUILD</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>package-jar</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>
										${javapackager}
									</executable>
									<arguments>
										<argument>-deploy</argument>
										<argument>-native</argument>
										<argument>installer</argument>
										<argument>-name</argument>
										<argument>rsch</argument>
										<argument>-appclass</argument>
										<argument>${app.main.class}</argument>
										<argument>-srcfiles</argument>
										<argument>
											${buildDirectory}/${name-with-dependencies}.jar
										</argument>
										<argument>-outdir</argument>
										<argument>./target</argument>
										<argument>-outfile</argument>
										<argument>
											${project.artifactId}-app
										</argument>
										<argument>-v</argument>
										<argument>-srcdir</argument>
										<argument>${project.build.directory}/..</argument>
										<argument>-srcfiles</argument>
										<argument>LICENSE</argument>
										<argument>-BlicenseFile=LICENSE</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
